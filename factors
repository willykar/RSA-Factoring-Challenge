#!/usr/bin/python3
Import time
import math
import sys

def pollard_rho(n):
    if n % 2 == 0:
        return 2
    
    x = 2
    y = 2
    d = 1 
    f = lambda x: (x**2 + 1) % n
    while d == 1:
        x = f(x)
	
        y = f(f(y))
        # Calculating the greatest common divisor between |x - y| and n
        d = math.gcd(abs(x - y), n)
    # Return non-trivial factor
    return d

def main():
    if len(sys.argv) != 2:
        print("Usage: python factorize.py <file>")
	return
    file_path = sys.argv[1]
    start_time = time.time()
    try:
        with open(file_path, 'r') as file:
            numbers = file.readlines()
        for number in numbers:
            num = int(number.strip())
            factor = pollard_rho(num)
            # If the factor is equal to the original number
            if factor == num:
                print(f"{num} is prime.")
            else:
                print(f"{num}={factor}*{num // factor}")

	if time.time() - start_time > 5:
                print("Time limit exceeded")
                exit()

    except FileNotFoundError:
        print(f"File '{file_path}' not found.")

if __name__ == '__main__':
    main(
